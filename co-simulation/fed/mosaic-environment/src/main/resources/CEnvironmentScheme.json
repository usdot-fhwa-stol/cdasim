{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Environment Events",
    "description": "Schema describing the JSON file structure for the environment configuration. It is is used to define which events are evaluated by the simulator. Entities entering the areas of the events, are notified by the 'EnvironmentSensorUpdates' interaction",
    "type": "object",
    "properties": {
        "events": {
            "description": "List of events.",
            "type": "array",
            "items": { "$ref": "#/definitions/event" }
        }
    },
    "definitions": {
        "event": {
            "title": "event",
            "description": "Object to define a single event configuration.",
            "type": "object",
            "properties": {
                "type": { 
                    "description": "Type of the event.",
                    "$ref": "#/definitions/eventType" 
                },
                "location": { 
                    "description": "The location of the event,, this can either be a geoArea or a string representing a specific road segment.",
                    "$ref": "#/definitions/eventLocation" 
                },
                "time": { 
                    "description": "Time of the event.",
                    "$ref": "#/definitions/eventTime" 
                }
            },
            "required": [ "type", "location", "time" ]
        },
        "eventType": {
            "title": "eventType",
            "description": "Object to define the type of an event.",
            "type": "object",
            "properties": {
                "sensorType": { 
                    "description": "Represents the type of sensor value this event is emitting (e.g. Ice, Snow, or an arbitrary Obstacle). The value can be set to any valid string.",
                    "type": "string"
                },
                "value": {
                    "description": "Used for assigning a value to the event. It can be used as the strength of an event, the amount of free parking spots in a parking lot, etc.",
                    "type": "integer", 
                    "default": 1 
                }
            },
            "required": [ "sensorType" ]
        },
        "eventLocation": {
            "title": "eventLocation",
            "description": "Object to define the event location configuration, which is either a GeoArea (e.g. rectangle, circle, or polygon) or a specific street segment.",
            "type": "object",
            "properties": {
                "area": {
                    "description": "The area in which the event is located in.",
                    "$ref": "#/definitions/area"
                },
                "connectionId": {
                    "description": "The ID of the road segment the event is located on (Connection ID).",
                    "type": "string"
                }
            }
        },
        "area": {
            "title": "area",
            "description": "Object to define the area in which the event is located in.",
            "type": "object",
            "properties": {
                "type": { 
                    "description": "The type of the area.",
                    "type": "string",
                    "enum": [ "Rectangle", "Circle", "Polygon" ]
                }
            },
            "anyOf": [
                { "$ref": "#/definitions/geoCircle" },
                { "$ref": "#/definitions/geoRectangle" },
                { "$ref": "#/definitions/geoPolygon" }
            ]
        },
        "geoPoint": {
            "title": "geoPoint",
            "description": "Object to define geographical point coordinates.",
            "type": "object",
            "properties": {
                "longitude": { 
                    "description":"East-west position of a point on earth.",
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "latitude": { 
                    "description":"North-south position of a point on earth.",
                    "type": "number",
                    "maximum": 90,
                    "minimmum": -90
                }
            },
            "required": [ "longitude", "latitude" ]
        },
        "geoCircle": {
            "title": "geoCircle",
            "description": "Object to define an immutable pair of a geoPoint center position and a radius in meters.",
            "type": "object",
            "properties": {
                "center": { 
                    "description": "Center of the circle.",
                    "$ref": "#/definitions/geoPoint" 
                },
                "radius": {
                    "description": "Radius of the circle in m.",
                    "type": "number",
                    "minimum": 0
                }
            },
            "required": [ "radius", "center" ]
        },
        "geoRectangle": {
            "title": "geoRectangle",
            "description": "Object to define an immutable pair of two different GeoPoints. Together they form a rectangular area.",
            "type": "object",
            "properties": {
                "a": { 
                    "description": "GeoPoint defining the north-western vertex of the rectangle.",
                    "$ref": "#/definitions/geoPoint" 
                },
                "b": { 
                    "description": "GeoPoint defining the south-eastern vertex of the rectangle.",
                    "$ref": "#/definitions/geoPoint" 
                }
            },
            "required": [ "a", "b" ]
        },
        "geoPolygon": {
            "title": "geoPolygon",
            "description": "Object to define a set of GeoPoints. Together the points for a polygonal area.",
            "type": "object",
            "properties": {
                "vertices": {
                    "description": "Set of points representing the vertices of a polygon.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/geoPoint" }
                }
            }
        },
        "eventTime": {
            "title": "eventTime",
            "description": "Object to define the temporal properties of an event.",
            "type": "object",
            "properties": {
                "start": {
                    "description": "Start time of the event. If defined as a number, then the default unit is ns. Alternatively this can be defined as a string to include the unit of measurement (e.g. '3 minutes')",
                    "anyOf": [
                        { "type": "string", "maxLength": 20 },
                        { "type": "number", "minimum": 0 }
                    ]
                },
                "end": {
                    "description": "End time of the event. If defined as a number, then the default unit is ns. Alternatively this can be defined as a string to include the unit of measurement (e.g. '3 minutes')",
                    "anyOf": [
                        { "type": "string", "maxLength": 20 },
                        { "type": "number", "minimum": 0 }
                    ]
                }
            },
            "required": [ "start", "end" ]
        }
    }
}
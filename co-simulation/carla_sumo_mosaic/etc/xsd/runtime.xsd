<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:element name="configuration">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                For example see etc/runtime.xml
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="threads" minOccurs="0"/>
                <xs:element ref="federates"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="threads" type="xs:integer"/>
    <xs:element name="federates">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="federate"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="federate">
        <xs:complexType>
            <xs:all>
                <xs:element ref="id" maxOccurs="1" minOccurs="1"/>
                <xs:element ref="deploy" maxOccurs="1" minOccurs="1"/>
                <xs:element ref="start" maxOccurs="1" minOccurs="1"/>
                <xs:element ref="host" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="update" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="config" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="configDeployPath" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="dockerImage" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="port" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="javaClasspathEntries" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="javaMemorySizeXms" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="javaMemorySizeXmx" maxOccurs="1" minOccurs="0"/>
                <xs:element name="customJavaArgument" type="xs:string" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="subscriptions"/>
            </xs:all>
            <xs:attribute name="class" use="required">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        MOSAIC tries to instantiate the given federate ambassador implementation.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="priority">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Sets the priority for the federate, with the smaller
                        number being the higher priority.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="deploy" type="xs:boolean">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                If deploy is set to true,
                the federate
                binaries, located in
                bin/fed/federate-id
                will be copied to the
                specified location
                tmp/fed/federation-id
                for local deployment,
                remote directory for remote hosts.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="id" type="xs:NCName">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Specifing a unique
                identifier as well as the
                configuration folder
                name.
                MOSAIC is
                looking for the federates
                configuration in the folder
                path/to/scenario/federate-id
                .
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="start" type="xs:boolean">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                true will fetch a
                startcommand from the
                federate and creates a new
                process running the
                federate.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="host" type="xs:NCName">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                The hosts are specified
                in
                etc/hosts.json
                ,insert the host, where
                this
                federate runs on using the host id here.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="config" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Give the name of the
                configuration for your
                federate here, a
                reference to this file will
                be forwarded to the ambassador implementation.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="configDeployPath" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Give the path to a
                subdirectory to which the
                configuration files for the
                federates are deploy to.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="dockerImage" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Define a name of an docker image on which the federate is
                installed. This
                image will be used to create and run a docker container.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="windowSizeInNs" type="xs:integer"/>
    <xs:element name="stateSaveManager" type="xs:string"/>
    <xs:element name="port" type="xs:integer">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                The port, which is used
                for communication
                between federate and
                ambassador.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="update" type="xs:integer"/>
    <xs:element name="subscriptions">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Subscriptions contains the
                list of MOSAIC
                interactions, which will be
                received by the ambassador.
                Only interactions specified here will be forwarded.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="subscription"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="subscription" type="xs:NCName">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                [S]
                V2xMessageReception
                Notifies the affected vehicle and delivers the
                payload message when a
                receive-event for that simulated node happens
                in the simulated
                network.

                [R]
                VehicleRegistration
                Used to add/remove new
                vehicles as network nodes.

                [R] RsuRegistration
                Used to add new RSUs as
                network
                nodes.

                [R] TrafficLightRegistration
                Used to add new TrafficLights as
                network nodes.

                [R] VehicleUpdates
                Used to
                update the positions of
                the simulated network nodes.

                [R] V2xMessageTransmission
                Emits a new V2X
                message according to
                the applications implementation.

                [R]
                VehicleTileMigration
                TODO: Add description here.

                == OMNeT++ ==

                [S]
                V2xMessageReception
                Notifies the affected
                vehicle and delivers the
                payload message when a
                receive-event for that simulated node happens
                in the
                simulated
                network.

                [R] VehicleRegistration
                Used to add/remove new
                vehicles as network nodes.

                [R] RsuRegistration
                Used to add
                new RSUs as
                network nodes.

                [R] TrafficLightRegistration
                Used to add new TrafficLights as
                network nodes.

                [R]
                VehicleUpdates
                Used to update the positions of
                the simulated network nodes.

                [R] V2xMessageTransmission
                Emits a new
                V2X
                message according to the applications implementation.

                == SUMO ==
                class:
                org.eclipse.mosaic.fed.sumo.ambassador.SumoAmbassador

                [S]
                VehicleUpdates
                Is sent in the defined
                update-interval and notifies
                listeners about
                added, updated and removed vehicles in the
                simulation.

                [S]
                TrafficLightUpdates
                Is sent to update traffic light groups in
                application container after the
                changes
                of traffic
                lights' state.

                [R]
                VehicleTypesInitialization
                Causes SUMO to initialize the vehicle types.

                [R] VehicleRegistration
                Used to add/remove new vehicles as network nodes.

                [R] VehicleRouteChange
                Causes SUMO to re-route the affected
                vehicle in a static way.

                [R]
                VehicleLaneChange
                Causes SUMO to change the road
                lane of the affected vehicle.

                [R] VehicleSlowDown
                Sets the vehicles
                current
                speed to the given value.

                [R]
                TrafficLightStateChange
                Changes the
                states of traffic lights, e.g. current phase remaining
                time, program,
                etc..

                == V2X-Application ==

                [S]
                V2xMessageTransmission
                Emits a new V2X message according to the applications
                implementation.

                [S]
                TrafficLightStateChange
                Is sent to change the
                state of traffic light.

                [R] V2xMessageReception
                Delivers the
                payload of
                the V2X Message to the underlying simulated
                application.

                [R]
                EnvironmentSensorUpdates
                Adds a traffic light with
                the local traffic light
                information
                (e.g. position, program, etc.).

                [R] VehicleUpdates
                Updates the local
                vehicle information
                (e.g. position, speed, etc.).

                [R] TrafficLightRegistration
                Adds a traffic light with the local
                traffic
                light information
                (e.g. position, program, etc.).

                [R] RsuRegistration
                Adds an
                RSU with the local RSU
                information
                (e.g. position).

                [R] VehicleRegistration
                Adds a vehicle with the local vehicle information.

                [R]
                VehicleNavigationUpdate
                Updates the local Navigation information,
                such as street, road length etc.

                [R]
                VehicleTypesInitialization
                Causes
                the application simulator to initialize the vehicle's types.

                [R]
                TrafficLightUpdates
                Causes the application simulator to update simulation units
                responsible for changed traffic light groups.

                [R] ReceiveCellMessage
                TODO: Add description here.

                [R]
                SumoTraciResponse
                TODO: Add description
                here.

                ==
                Navigation ==

                [S]
                VehicleRouteChange
                Used to
                inform a traffic simulator e.g. Vissim
                about a new route.
                This route was pre-calculated in advance,
                therefore only
                the new path and vehicle id is supplied.

                [S]
                VehicleRoutesInitialization
                This interaction is emitted,
                when the ambassador
                completed its path
                generation.
                The interaction contains all generated path
                and its ids.

                [S]
                VehicleNavigationUpdate
                Sent to the application
                simulator to inform it about the
                new route, street length,
                max speed
                etc..

                [R] VehicleUpdates
                Is used to react on every movement by
                sending a NavigationUpdate.

                [R]
                VehicleRegistration
                Used to distinguish
                between virtual and classic vehicles.

                == Environment ==

                [S] EnvironmentSensorUpdates
                Informs
                any
                vehicle that is affected of an environmental event
                that it has
                new EnvironmentSensorUpdates available.

                [R]
                EnvironmentSensorActivation
                New vehicles sent
                this to register for environment events.

                [R] VehicleUpdates
                Triggers
                the check if new positions are affected of environmental
                events.

                == Mapping/Application ==

                [R]
                VehicleTypesInitialization
                VehicleTypesInitialization.

                [R]
                VehicleRoutesInitialization
                Used for update of vehicle infos.

                [R]
                VehicleRegistration
                Used for update of vehicle
                mappings.
                This interaction is used
                by the visualization
                ambassador itself for state keeping of current
                mapping
                of vehicles in simulation.

                [R] RsuRegistration
                Used for update of RSU
                mappings.

                [R] TrafficLightRegistration
                Used for
                update of TrafficLight
                mappings.

                [R] VehicleUpdates
                Used to visualize traffic simulation.

                [R] EnvironmentSensorUpdates
                Used to visualize environment simulation.

                [R]
                VehicleNavigationUpdate
                Used to visualize traffic simulation.

                [R]
                V2xMessageTransmission
                Used to visualize network communication.

                [R]
                V2xMessageReception
                Used to visualize network
                communication.

                [R]
                TrafficLightUpdates
                Used to visualize traffic simulation.

                [R] VehicleSlowDown
                Used to
                visualize traffic simulation.

                [R] VehicleRouteChange
                Used to visualize traffic
                simulation.

                [R] VehicleLaneChange
                Used to
                visualize traffic simulation.

                [R]
                TrafficLightStateChange
                Used to visualize traffic simulation.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="javaMemorySizeXms" type="xs:integer"></xs:element>

    <xs:element name="javaMemorySizeXmx" type="xs:integer">

    </xs:element>


    <xs:element name="javaClasspathEntries">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                List of paths which will be appended to the classpath of the
                Java process the federate is executed in.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="classpath" maxOccurs="unbounded" minOccurs="1"></xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="classpath">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Path which will be appended to the classpath of the
                Java process the federate is executed in.
            </xs:documentation>
        </xs:annotation>

        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:minLength value="1"></xs:minLength>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>


    <xs:element name="customJavaArguments" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Custom arguments which will be passed to the
                Java Process if the federate is ecexuted
                in a JVM.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
</xs:schema>
